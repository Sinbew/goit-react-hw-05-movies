{"version":3,"file":"static/js/911.7bbb9e35.chunk.js","mappings":"wOACA,EAAuB,qBAAvB,EAAuD,yB,mBCgFvD,EAzEe,WAGb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,SAE/B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,MAuBjB,OARAC,EAAAA,EAAAA,YAAU,WACHP,IAILQ,EAAAA,EAAAA,IAAeR,GAAOS,KAAKL,KAC1B,CAACJ,EAAOF,EAAcM,KAGvB,iCACE,kBAAMM,SAvBO,SAAAC,GACfA,EAAIC,iBAE2B,KAA3BD,EAAIE,OAAOb,MAAMc,OAMrBf,EAAgB,CAAEC,MAAOW,EAAIE,OAAOb,MAAMc,QAC1CH,EAAIE,OAAOb,MAAMc,MAAQ,IANvBC,EAAAA,GAAAA,MAAY,8BAmBcC,UAAWC,EAArC,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,gCAGF,mBAEA,gCACG,IACAf,EAAWiB,QACV,eAAIJ,UAAWC,EAAf,SACGd,EAAWkB,KAAI,SAAAC,GACd,OACE,yBACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMnB,GAAYoB,GAAE,kBAAaH,EAAGI,IAAnD,WACE,gBACEC,MAAM,MACNC,IACEN,EAAGO,YAAH,yCACsCP,EAAGO,aACrC,+FAENC,IAAKR,EAAGH,QAGV,uBAAIG,EAAGS,MAAQT,EAAGS,MAAQT,EAAGH,WAZxBG,EAAGI,UAmBlB,2D,iMCxDJM,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAW,mCAAG,sGACFJ,EAAgBjC,IAAI,wBADlB,uBACjBsC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAIXhC,EAAc,mCAAG,WAAMR,GAAN,yFACLkC,EAAgBjC,IAAI,gBAAiB,CAC1DoC,OAAQ,CAAErC,MAAAA,KAFgB,uBACpBuC,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAMdC,EAAgB,mCAAG,WAAMf,GAAN,yFACPQ,EAAgBjC,IAAhB,gBAA6ByB,IADtB,uBACtBa,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBG,EAAa,mCAAG,WAAMhB,GAAN,yFACJQ,EAAgBjC,IAAhB,iBAA8ByB,EAA9B,aADI,uBACnBa,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbI,EAAe,mCAAG,WAAMjB,GAAN,yFACNQ,EAAgBjC,IAAhB,mBAChByB,EADgB,aADM,uBACrBa,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__gVl+9\",\"filmList\":\"Movies_filmList__4Gian\"};","import { useEffect, useState } from 'react';\n// import { useMemo } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSerchMovies } from 'api/api';\n\nimport { Link } from 'react-router-dom';\nimport styles from './Movies.module.css';\nimport { toast } from 'react-toastify';\nconst Movies = () => {\n  // const queryObj = useMemo(() => Object.fromEntries([...query]), [query]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const [searchFilm, setSearchFilm] = useState([]);\n\n  const location = useLocation();\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n\n    if (evt.target.query.value === '') {\n      toast.error('Please enter a movie name');\n\n      return;\n    }\n\n    setSearchParams({ query: evt.target.query.value });\n    evt.target.query.value = '';\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getSerchMovies(query).then(setSearchFilm);\n  }, [query, searchParams, setSearchFilm]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className={styles.form}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search a movie</button>\n      </form>\n\n      <hr />\n\n      <>\n        {' '}\n        {searchFilm.length ? (\n          <ul className={styles.filmList}>\n            {searchFilm.map(el => {\n              return (\n                <li key={el.id}>\n                  <Link state={{ from: location }} to={`/movies/${el.id}`}>\n                    <img\n                      width=\"500\"\n                      src={\n                        el.poster_path\n                          ? `https://image.tmdb.org/t/p/w500${el.poster_path}`\n                          : \"'https://s1.hostingkartinok.com/uploads/images/2022/07/40ceaea2e22257d2a139ca5a0c0b8ba9.jpg'\"\n                      }\n                      alt={el.name}\n                    />\n\n                    <p>{el.title ? el.title : el.name}</p>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <h3>Please, search a movie</h3>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export const fetchTrends = async () => {\n//   const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\n// export const fetchSearch = async () => {\n//   const response = await axios.get(\n//     `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n//   );\n\n//   return response.data.results;\n// };\nconst API_KEY = '78a8eb0d5a179699f4c03c65891d2438';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchTrends = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/week');\n  return data.results;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useSearchParams","searchParams","setSearchParams","query","get","useState","searchFilm","setSearchFilm","location","useLocation","useEffect","getSerchMovies","then","onSubmit","evt","preventDefault","target","value","toast","className","styles","type","name","length","map","el","state","from","to","id","width","src","poster_path","alt","title","defaultParams","api_key","moviesApiClient","axios","baseURL","params","fetchTrends","data","results","getDetailsMovies","getCastMovies","getRewiesMovies"],"sourceRoot":""}