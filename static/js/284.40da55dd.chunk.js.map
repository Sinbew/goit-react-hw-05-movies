{"version":3,"file":"static/js/284.40da55dd.chunk.js","mappings":"mTAkBMA,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAW,mCAAG,sGACFJ,EAAgBK,IAAI,wBADlB,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAIXC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CAAEM,MAAAA,KAFgB,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAMdG,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAAgBK,IAAhB,gBAA6BM,IADtB,uBACtBL,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBM,EAAa,mCAAG,WAAMD,GAAN,yFACJX,EAAgBK,IAAhB,iBAA8BM,EAA9B,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbO,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAAgBK,IAAhB,mBAChBM,EADgB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,uD,6GC5C5B,EAAuB,0B,SCEVO,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,gBAAIC,UAAWC,EAAf,WACE,qCAAaH,MACb,mBACA,uBAAIC,QCPV,EAAuB,sBCoCvB,EA/BgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBM,GAASM,KAAKF,KAC7B,CAACJ,KAGF,8BACGG,EAAOI,QACN,eAAIT,UAAWC,EAAf,SACGI,EAAOI,QACNJ,EAAOK,KAAI,SAAAC,GACT,OACE,SAACd,EAAD,CAEEC,OAAQa,EAAGb,OACXC,QAASY,EAAGZ,SAFPY,EAAGjB,UAQlB","sources":["api/api.js","webpack://react-homework-template/./src/components/Reviews/ReviewsItem.module.css?db93","components/Reviews/ReviewsItem.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export const fetchTrends = async () => {\n//   const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n//   return response.data.results;\n// };\n\n// export const fetchSearch = async () => {\n//   const response = await axios.get(\n//     `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n//   );\n\n//   return response.data.results;\n// };\nconst API_KEY = '78a8eb0d5a179699f4c03c65891d2438';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchTrends = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/week');\n  return data.results;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ReviewsItem_item__hzHW0\"};","import { PropTypes } from 'prop-types';\n\nimport styles from './ReviewsItem.module.css';\nexport const ReviewsItem = ({ author, content }) => {\n  return (\n    <li className={styles.item}>\n      <h4>Author: {author}</h4>\n      <hr />\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getRewiesMovies } from 'api/api';\nimport { ReviewsItem } from './ReviewsItem';\n\nimport styles from './Reviews.module.css';\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    getRewiesMovies(movieId).then(setReview);\n  }, [movieId]);\n\n  return (\n    <>\n      {review.length ? (\n        <ul className={styles.list}>\n          {review.length &&\n            review.map(el => {\n              return (\n                <ReviewsItem\n                  key={el.id}\n                  author={el.author}\n                  content={el.content}\n                />\n              );\n            })}\n        </ul>\n      ) : (\n        <h4>There is no reviews yet</h4>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["defaultParams","api_key","moviesApiClient","axios","baseURL","params","fetchTrends","get","data","results","getSerchMovies","query","getDetailsMovies","id","getCastMovies","getRewiesMovies","ReviewsItem","author","content","className","styles","movieId","useParams","useState","review","setReview","useEffect","then","length","map","el"],"sourceRoot":""}